{"ast":null,"code":"const API_BASE='https://api.jolpi.ca/ergast/f1';export const fetchData=async endpoint=>{try{const response=await fetch(\"\".concat(API_BASE,\"/\").concat(endpoint,\".json\"));if(!response.ok)throw new Error('Network response was not ok');const data=await response.json();return data.MRData||data;// Adjusted for new API structure\n}catch(error){console.error('Error fetching from F1 2025 API:',error);throw error;}};// 2025 Season Endpoints\nexport const get2025DriverStandings=async()=>{var _data$StandingsTable$;const data=await fetchData('2025/driverstandings');return((_data$StandingsTable$=data.StandingsTable.StandingsLists[0])===null||_data$StandingsTable$===void 0?void 0:_data$StandingsTable$.DriverStandings)||[];};export const get2025ConstructorStandings=async()=>{var _data$StandingsTable$2;const data=await fetchData('2025/constructorstandings');return((_data$StandingsTable$2=data.StandingsTable.StandingsLists[0])===null||_data$StandingsTable$2===void 0?void 0:_data$StandingsTable$2.ConstructorStandings)||[];};export const get2025RaceSchedule=async()=>{const data=await fetchData('2025/races');return data.RaceTable.Races||[];};export const get2025RaceResults=async round=>{const endpoint=round?\"2025/\".concat(round,\"/results\"):'2025/results';const data=await fetchData(endpoint);return data.RaceTable.Races||[];};export const get2025SprintResults=async round=>{const endpoint=round?\"2025/\".concat(round,\"/sprint\"):'2025/sprint';const data=await fetchData(endpoint);return data.RaceTable.Races||[];};","map":{"version":3,"names":["API_BASE","fetchData","endpoint","response","fetch","concat","ok","Error","data","json","MRData","error","console","get2025DriverStandings","_data$StandingsTable$","StandingsTable","StandingsLists","DriverStandings","get2025ConstructorStandings","_data$StandingsTable$2","ConstructorStandings","get2025RaceSchedule","RaceTable","Races","get2025RaceResults","round","get2025SprintResults"],"sources":["/Users/abisek/Library/CloudStorage/OneDrive-MarymountUniversity/MU Codes/repos/f1-app/src/api/ergast.js"],"sourcesContent":["const API_BASE = 'https://api.jolpi.ca/ergast/f1';\n\nexport const fetchData = async (endpoint) => {\n  try {\n    const response = await fetch(`${API_BASE}/${endpoint}.json`);\n    if (!response.ok) throw new Error('Network response was not ok');\n    const data = await response.json();\n    return data.MRData || data; // Adjusted for new API structure\n  } catch (error) {\n    console.error('Error fetching from F1 2025 API:', error);\n    throw error;\n  }\n};\n\n// 2025 Season Endpoints\nexport const get2025DriverStandings = async () => {\n  const data = await fetchData('2025/driverstandings');\n  return data.StandingsTable.StandingsLists[0]?.DriverStandings || [];\n};\n\nexport const get2025ConstructorStandings = async () => {\n  const data = await fetchData('2025/constructorstandings');\n  return data.StandingsTable.StandingsLists[0]?.ConstructorStandings || [];\n};\n\nexport const get2025RaceSchedule = async () => {\n  const data = await fetchData('2025/races');\n  return data.RaceTable.Races || [];\n};\n\nexport const get2025RaceResults = async (round) => {\n  const endpoint = round ? `2025/${round}/results` : '2025/results';\n  const data = await fetchData(endpoint);\n  return data.RaceTable.Races || [];\n};\n\nexport const get2025SprintResults = async (round) => {\n  const endpoint = round ? `2025/${round}/sprint` : '2025/sprint';\n  const data = await fetchData(endpoint);\n  return data.RaceTable.Races || [];\n};"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,gCAAgC,CAEjD,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIL,QAAQ,MAAAK,MAAA,CAAIH,QAAQ,SAAO,CAAC,CAC5D,GAAI,CAACC,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAACE,MAAM,EAAIF,IAAI,CAAE;AAC9B,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,sBAAsB,CAAG,KAAAA,CAAA,GAAY,KAAAC,qBAAA,CAChD,KAAM,CAAAN,IAAI,CAAG,KAAM,CAAAP,SAAS,CAAC,sBAAsB,CAAC,CACpD,MAAO,EAAAa,qBAAA,CAAAN,IAAI,CAACO,cAAc,CAACC,cAAc,CAAC,CAAC,CAAC,UAAAF,qBAAA,iBAArCA,qBAAA,CAAuCG,eAAe,GAAI,EAAE,CACrE,CAAC,CAED,MAAO,MAAM,CAAAC,2BAA2B,CAAG,KAAAA,CAAA,GAAY,KAAAC,sBAAA,CACrD,KAAM,CAAAX,IAAI,CAAG,KAAM,CAAAP,SAAS,CAAC,2BAA2B,CAAC,CACzD,MAAO,EAAAkB,sBAAA,CAAAX,IAAI,CAACO,cAAc,CAACC,cAAc,CAAC,CAAC,CAAC,UAAAG,sBAAA,iBAArCA,sBAAA,CAAuCC,oBAAoB,GAAI,EAAE,CAC1E,CAAC,CAED,MAAO,MAAM,CAAAC,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CAC7C,KAAM,CAAAb,IAAI,CAAG,KAAM,CAAAP,SAAS,CAAC,YAAY,CAAC,CAC1C,MAAO,CAAAO,IAAI,CAACc,SAAS,CAACC,KAAK,EAAI,EAAE,CACnC,CAAC,CAED,MAAO,MAAM,CAAAC,kBAAkB,CAAG,KAAO,CAAAC,KAAK,EAAK,CACjD,KAAM,CAAAvB,QAAQ,CAAGuB,KAAK,SAAApB,MAAA,CAAWoB,KAAK,aAAa,cAAc,CACjE,KAAM,CAAAjB,IAAI,CAAG,KAAM,CAAAP,SAAS,CAACC,QAAQ,CAAC,CACtC,MAAO,CAAAM,IAAI,CAACc,SAAS,CAACC,KAAK,EAAI,EAAE,CACnC,CAAC,CAED,MAAO,MAAM,CAAAG,oBAAoB,CAAG,KAAO,CAAAD,KAAK,EAAK,CACnD,KAAM,CAAAvB,QAAQ,CAAGuB,KAAK,SAAApB,MAAA,CAAWoB,KAAK,YAAY,aAAa,CAC/D,KAAM,CAAAjB,IAAI,CAAG,KAAM,CAAAP,SAAS,CAACC,QAAQ,CAAC,CACtC,MAAO,CAAAM,IAAI,CAACc,SAAS,CAACC,KAAK,EAAI,EAAE,CACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}