{"ast":null,"code":"var _jsxFileName = \"/Users/abisek/Library/CloudStorage/OneDrive-MarymountUniversity/MU Codes/repos/f1-app/leaderboard-app/src/components/ScenarioForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { getCurrentStandingsList, getUpcomingRacesList } from '../utils/f1Data';\nimport { calculateScenario } from '../utils/calculations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenarioForm = ({\n  setScenarioResults\n}) => {\n  _s();\n  var _upcomingRaces$;\n  const [standings, setStandings] = useState(getCurrentStandingsList());\n  const [upcomingRaces, setUpcomingRaces] = useState(getUpcomingRacesList());\n  const [selectedRace, setSelectedRace] = useState(((_upcomingRaces$ = upcomingRaces[0]) === null || _upcomingRaces$ === void 0 ? void 0 : _upcomingRaces$.name) || '');\n  useEffect(() => {\n    const initializeData = async () => {\n      try {\n        await loadF1Data();\n        setStandings(getCurrentStandings());\n        const races = getUpcomingRaces();\n        setUpcomingRaces(races);\n        if (races.length > 0) {\n          setSelectedRace(races[0].name);\n        }\n      } catch (error) {\n        console.error('Error initializing data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeData();\n  }, []);\n  const onDragEnd = useCallback(result => {\n    if (!result.destination) return;\n    const items = Array.from(standings);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    const reorderedResults = items.map((item, index) => ({\n      ...item,\n      position: index + 1\n    }));\n    setStandings(reorderedResults);\n  }, [standings]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const results = calculateScenario(selectedRace, standings, standings);\n    setScenarioResults(results);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scenario-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Race Scenario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"race-select\",\n          children: \"Select Race:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"race-select\",\n          value: selectedRace,\n          onChange: e => setSelectedRace(e.target.value),\n          required: true,\n          children: upcomingRaces.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: race.name,\n            children: [race.name, \" (\", race.circuit, \")\"]\n          }, race.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-results-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Drag drivers to set finishing order:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: onDragEnd,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"drivers\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              className: \"driver-list\",\n              children: [standings.map((driver, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: driver.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  className: \"driver-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"position\",\n                    children: [index + 1, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"driver-name\",\n                      children: driver.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"driver-team\",\n                      children: driver.team\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this)\n              }, driver.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"calculate-btn\",\n          children: \"Calculate Scenario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ScenarioForm, \"txuvoFvoVuY8r8vfgZgp0OHdlkA=\");\n_c = ScenarioForm;\nexport default ScenarioForm;\nvar _c;\n$RefreshReg$(_c, \"ScenarioForm\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","getCurrentStandingsList","getUpcomingRacesList","calculateScenario","jsxDEV","_jsxDEV","ScenarioForm","setScenarioResults","_s","_upcomingRaces$","standings","setStandings","upcomingRaces","setUpcomingRaces","selectedRace","setSelectedRace","name","initializeData","loadF1Data","getCurrentStandings","races","getUpcomingRaces","length","error","console","setLoading","onDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","reorderedResults","map","item","position","handleSubmit","e","preventDefault","results","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","required","race","circuit","droppableId","provided","droppableProps","ref","innerRef","driver","draggableId","draggableProps","dragHandleProps","team","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/abisek/Library/CloudStorage/OneDrive-MarymountUniversity/MU Codes/repos/f1-app/leaderboard-app/src/components/ScenarioForm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { getCurrentStandingsList, getUpcomingRacesList } from '../utils/f1Data';\nimport { calculateScenario } from '../utils/calculations';\n\nconst ScenarioForm = ({ setScenarioResults }) => {\n  const [standings, setStandings] = useState(getCurrentStandingsList());\n  const [upcomingRaces, setUpcomingRaces] = useState(getUpcomingRacesList());\n  const [selectedRace, setSelectedRace] = useState(upcomingRaces[0]?.name || '');\n\n  \n  useEffect(() => {\n    const initializeData = async () => {\n      try {\n        await loadF1Data();\n        setStandings(getCurrentStandings());\n        const races = getUpcomingRaces();\n        setUpcomingRaces(races);\n        if (races.length > 0) {\n          setSelectedRace(races[0].name);\n        }\n      } catch (error) {\n        console.error('Error initializing data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeData();\n  }, []);\n\n  const onDragEnd = useCallback((result) => {\n    if (!result.destination) return;\n    \n    const items = Array.from(standings);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    \n    const reorderedResults = items.map((item, index) => ({\n      ...item,\n      position: index + 1\n    }));\n    \n    setStandings(reorderedResults);\n  }, [standings]);\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    const results = calculateScenario(selectedRace, standings, standings);\n    setScenarioResults(results);\n  };\n\n  if (loading) return <div className=\"loading\">Loading data...</div>;\n\n  return (\n    <div className=\"scenario-form\">\n      <h2>Create Race Scenario</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"race-select\">Select Race:</label>\n          <select\n            id=\"race-select\"\n            value={selectedRace}\n            onChange={(e) => setSelectedRace(e.target.value)}\n            required\n          >\n            {upcomingRaces.map(race => (\n              <option key={race.id} value={race.name}>\n                {race.name} ({race.circuit})\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"race-results-input\">\n          <h3>Drag drivers to set finishing order:</h3>\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"drivers\">\n              {(provided) => (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  className=\"driver-list\"\n                >\n                  {standings.map((driver, index) => (\n                    <Draggable\n                      key={driver.id}\n                      draggableId={driver.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"driver-item\"\n                        >\n                          <span className=\"position\">{index + 1}.</span>\n                          <div className=\"driver-info\">\n                            <span className=\"driver-name\">{driver.name}</span>\n                            <span className=\"driver-team\">{driver.team}</span>\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"submit\" className=\"calculate-btn\">\n            Calculate Scenario\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ScenarioForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}